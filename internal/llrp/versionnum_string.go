//
// Copyright (C) 2020 Intel Corporation
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by "stringer -type=VersionNum,messageType,paramType,connAttemptEventParam"; DO NOT EDIT.

package llrp

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[versionInvalid-0]
	_ = x[Version1_0_1-1]
}

const _VersionNum_name = "versionInvalidVersion1_0_1"

var _VersionNum_index = [...]uint8{0, 14, 26}

func (i VersionNum) String() string {
	if i >= VersionNum(len(_VersionNum_index)-1) {
		return "VersionNum(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _VersionNum_name[_VersionNum_index[i]:_VersionNum_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[GetReaderCapabilities-1]
	_ = x[GetReaderConfig-2]
	_ = x[GetReaderConfigResponse-12]
	_ = x[SetReaderConfig-3]
	_ = x[CloseConnectionResponse-4]
	_ = x[GetReaderCapabilitiesResponse-11]
	_ = x[SetReaderConfigResponse-13]
	_ = x[CloseConnection-14]
	_ = x[GetSupportedVersion-46]
	_ = x[SetProtocolVersion-47]
	_ = x[GetSupportedVersionResponse-56]
	_ = x[SetProtocolVersionResponse-57]
	_ = x[KeepAlive-62]
	_ = x[ReaderEventNotification-63]
	_ = x[KeepAliveAck-72]
	_ = x[ErrorMessage-100]
	_ = x[CustomMessage-1023]
	_ = x[msgResvStart-900]
	_ = x[msgResvEnd-999]
}

const (
	_messageType_name_0 = "GetReaderCapabilitiesGetReaderConfigSetReaderConfigCloseConnectionResponse"
	_messageType_name_1 = "GetReaderCapabilitiesResponseGetReaderConfigResponseSetReaderConfigResponseCloseConnection"
	_messageType_name_2 = "GetSupportedVersionSetProtocolVersion"
	_messageType_name_3 = "GetSupportedVersionResponseSetProtocolVersionResponse"
	_messageType_name_4 = "KeepAliveReaderEventNotification"
	_messageType_name_5 = "KeepAliveAck"
	_messageType_name_6 = "ErrorMessage"
	_messageType_name_7 = "msgResvStart"
	_messageType_name_8 = "msgResvEnd"
	_messageType_name_9 = "CustomMessage"
)

var (
	_messageType_index_0 = [...]uint8{0, 21, 36, 51, 74}
	_messageType_index_1 = [...]uint8{0, 29, 52, 75, 90}
	_messageType_index_2 = [...]uint8{0, 19, 37}
	_messageType_index_3 = [...]uint8{0, 27, 53}
	_messageType_index_4 = [...]uint8{0, 9, 32}
)

func (i messageType) String() string {
	switch {
	case 1 <= i && i <= 4:
		i -= 1
		return _messageType_name_0[_messageType_index_0[i]:_messageType_index_0[i+1]]
	case 11 <= i && i <= 14:
		i -= 11
		return _messageType_name_1[_messageType_index_1[i]:_messageType_index_1[i+1]]
	case 46 <= i && i <= 47:
		i -= 46
		return _messageType_name_2[_messageType_index_2[i]:_messageType_index_2[i+1]]
	case 56 <= i && i <= 57:
		i -= 56
		return _messageType_name_3[_messageType_index_3[i]:_messageType_index_3[i+1]]
	case 62 <= i && i <= 63:
		i -= 62
		return _messageType_name_4[_messageType_index_4[i]:_messageType_index_4[i+1]]
	case i == 72:
		return _messageType_name_5
	case i == 100:
		return _messageType_name_6
	case i == 900:
		return _messageType_name_7
	case i == 999:
		return _messageType_name_8
	case i == 1023:
		return _messageType_name_9
	default:
		return "messageType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ParamLLRPStatus-287]
	_ = x[ParamFieldError-288]
	_ = x[ParamParameterError-289]
	_ = x[ParamReaderEventNotificationData-246]
	_ = x[ParamUTCTimestamp-128]
	_ = x[ParamUptime-129]
	_ = x[ParamHoppingEvent-247]
	_ = x[ParamGPIEvent-248]
	_ = x[ParamROSpecEvent-249]
	_ = x[ParamBufferLevelWarnEvent-250]
	_ = x[ParamBufferOverflowEvent-251]
	_ = x[ParamReaderExceptionEvent-252]
	_ = x[ParamRFSurveyEvent-253]
	_ = x[ParamAISpecEvent-254]
	_ = x[ParamAntennaEvent-255]
	_ = x[ParamConnectionAttemptEvent-256]
	_ = x[ParamConnectionCloseEvent-257]
	_ = x[ParamSpecLoopEvent-365]
	_ = x[ParamCustomParameter-1023]
	_ = x[ParamEPC96-13]
	_ = x[ParamROSpectID-9]
	_ = x[ParamSpecIndex-14]
	_ = x[ParamInventoryParamSpecID-10]
	_ = x[ParamAntennaID-1]
	_ = x[ParamPeakRSSI-6]
	_ = x[ParamChannelIndex-7]
	_ = x[ParamFirstSeenUTC-2]
	_ = x[ParamFirstSeenUptime-3]
	_ = x[ParamLastSeenUTC-4]
	_ = x[ParamLastSeenUptime-5]
	_ = x[ParamTagSeenCount-8]
	_ = x[ParamClientReqOpSpecResult-15]
	_ = x[ParamAccessSpecID-16]
	_ = x[ParamOpSpecID-17]
	_ = x[ParamC1G2PC-12]
	_ = x[ParamC1G2XPCW1-19]
	_ = x[ParamC1G2XPCW2-20]
	_ = x[ParamC1G2CRC-11]
	_ = x[ParamC1G2SingulationDetails-18]
}

const (
	_paramType_name_0 = "ParamAntennaIDParamFirstSeenUTCParamFirstSeenUptimeParamLastSeenUTCParamLastSeenUptimeParamPeakRSSIParamChannelIndexParamTagSeenCountParamROSpectIDParamInventoryParamSpecIDParamC1G2CRCParamC1G2PCParamEPC96ParamSpecIndexParamClientReqOpSpecResultParamAccessSpecIDParamOpSpecIDParamC1G2SingulationDetailsParamC1G2XPCW1ParamC1G2XPCW2"
	_paramType_name_1 = "ParamUTCTimestampParamUptime"
	_paramType_name_2 = "ParamReaderEventNotificationDataParamHoppingEventParamGPIEventParamROSpecEventParamBufferLevelWarnEventParamBufferOverflowEventParamReaderExceptionEventParamRFSurveyEventParamAISpecEventParamAntennaEventParamConnectionAttemptEventParamConnectionCloseEvent"
	_paramType_name_3 = "ParamLLRPStatusParamFieldErrorParamParameterError"
	_paramType_name_4 = "ParamSpecLoopEvent"
	_paramType_name_5 = "ParamCustomParameter"
)

var (
	_paramType_index_0 = [...]uint16{0, 14, 31, 51, 67, 86, 99, 116, 133, 147, 172, 184, 195, 205, 219, 245, 262, 275, 302, 316, 330}
	_paramType_index_1 = [...]uint8{0, 17, 28}
	_paramType_index_2 = [...]uint8{0, 32, 49, 62, 78, 103, 127, 152, 170, 186, 203, 230, 255}
	_paramType_index_3 = [...]uint8{0, 15, 30, 49}
)

func (i paramType) String() string {
	switch {
	case 1 <= i && i <= 20:
		i -= 1
		return _paramType_name_0[_paramType_index_0[i]:_paramType_index_0[i+1]]
	case 128 <= i && i <= 129:
		i -= 128
		return _paramType_name_1[_paramType_index_1[i]:_paramType_index_1[i+1]]
	case 246 <= i && i <= 257:
		i -= 246
		return _paramType_name_2[_paramType_index_2[i]:_paramType_index_2[i+1]]
	case 287 <= i && i <= 289:
		i -= 287
		return _paramType_name_3[_paramType_index_3[i]:_paramType_index_3[i+1]]
	case i == 365:
		return _paramType_name_4
	case i == 1023:
		return _paramType_name_5
	default:
		return "paramType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[connectionSuccess-0]
	_ = x[readerInitiatedConnExists-1]
	_ = x[clientInitiatedConnExists-2]
	_ = x[failedReasonUnknown-3]
	_ = x[anotherConnAttempted-4]
}

const _connAttemptEventParam_name = "connectionSuccessreaderInitiatedConnExistsclientInitiatedConnExistsfailedReasonUnknownanotherConnAttempted"

var _connAttemptEventParam_index = [...]uint8{0, 17, 42, 67, 86, 106}

func (i connAttemptEventParam) String() string {
	if i >= connAttemptEventParam(len(_connAttemptEventParam_index)-1) {
		return "connAttemptEventParam(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _connAttemptEventParam_name[_connAttemptEventParam_index[i]:_connAttemptEventParam_index[i+1]]
}
